# Service Management Rule

## How to Run the Services

- To run all services (backend, frontend, db, redis, keycloak, celery, etc.) using Docker Compose:
  ```bash
  ./run.sh all
  ```
- To run a specific service (e.g., backend, frontend, db, redis, keycloak, celery):
  ```bash
  ./run.sh <service>
  # Example: ./run.sh backend
  ```
- To run backend and frontend in development mode (without Docker):
  ```bash
  ./run.sh dev
  ```
- To stop all running services:
  ```bash
  ./run.sh stop
  ```

## How to Check Service Status

- To check the status of all services:
  ```bash
  ./run.sh status
  ```
- This will show:
  - Docker containers' status (if running via Docker Compose)
  - Backend, frontend, database, redis, and keycloak health

## How to Check Logs

- For Docker-based services, use:
  ```bash
  docker-compose logs <service>
  # Example: docker-compose logs backend
  ```
- Or for all services:
  ```bash
  docker-compose logs
  ```
- For development mode (without Docker), check the terminal output where you started the service.

## Additional Commands

- To list all available components:
  ```bash
  ./run.sh list
  ```
- For help:
  ```bash
  ./run.sh help
  ```

---

**Note:**
- All commands are to be run from the project root directory.
- Replace `<service>` with the actual service name (backend, frontend, db, redis, keycloak, celery).
- Log files are managed by Docker unless running in development mode.
